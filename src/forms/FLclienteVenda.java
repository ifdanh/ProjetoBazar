/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import bazar.ClienteDAO;
import java.util.ArrayList;
import java.util.List;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author andregaldino
 */
public class FLclienteVenda extends javax.swing.JFrame {

    
    List<bazar.Cliente> listaClienteV = new ArrayList();
    List<bazar.Cliente> listaNovaClienteV = new ArrayList();
    bazar.Cliente consumidor;
    public FLclienteVenda() {
        initComponents();
        this.atualizaGrid();
        
        txtNomeC.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                //int ccodigo = listaCodCategoria.get(cbCategoriaV.getSelectedIndex());
                //listaProdutos = new ProdutoDAO().selecionarProdutosNomeCategoria(txtNomeP.getText(), ccodigo);
                listaNovaClienteV.removeAll(listaNovaClienteV);
               
                for (bazar.Cliente c : listaClienteV) {
                    if (c.getNome().contains(txtNomeC.getText()) || c.getSobrenome().contains(txtNomeC.getText())) {
                       listaNovaClienteV.add(c);
                    }
                }
                
                atualizaGrid(listaNovaClienteV);

            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                //int ccodigo = listaCodCategoria.get(cbCategoriaV.getSelectedIndex());
                //listaProdutos = new ProdutoDAO().selecionarProdutosNomeCategoria(txtNomeP.getText(), ccodigo);
               listaNovaClienteV.removeAll(listaNovaClienteV);
               
                for (bazar.Cliente c : listaClienteV) {
                    if (c.getNome().contains(txtNomeC.getText()) || c.getSobrenome().contains(txtNomeC.getText())) {
                       listaNovaClienteV.add(c);
                    }
                }
                
                atualizaGrid(listaNovaClienteV);
                //atualizaGrid(listaProdutos);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                //int ccodigo = listaCodCategoria.get(cbCategoriaV.getSelectedIndex());
                //listaProdutos = new ProdutoDAO().selecionarProdutosNomeCategoria(txtNomeP.getText(), ccodigo);
                //atualizaGrid(listaProdutos);
                
               listaNovaClienteV.removeAll(listaNovaClienteV);
               
                for (bazar.Cliente c : listaClienteV) {
                    if (c.getNome().contains(txtNomeC.getText()) || c.getSobrenome().contains(txtNomeC.getText())) {
                       listaNovaClienteV.add(c);
                    }
                }
                
                atualizaGrid(listaNovaClienteV);
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNomeC = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridClientesV = new javax.swing.JTable();
        btnSelecionar = new javax.swing.JButton();
        bntCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta de Cliente"));

        jLabel1.setText("Nome :");

        gridClientesV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Telefone", "Celular", "Categoria", "Descrição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gridClientesV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gridClientesVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gridClientesV);

        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        bntCancelar.setText("Cancelar");
        bntCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnSelecionar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bntCancelar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(35, 35, 35)
                                .addComponent(txtNomeC, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNomeC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntCancelar)
                    .addComponent(btnSelecionar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bntCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_bntCancelarActionPerformed

    private void gridClientesVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gridClientesVMouseClicked
        int linhaSelecionada = gridClientesV.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) gridClientesV.getModel();
        int codigo = ((Integer) modelo.getValueAt(linhaSelecionada, 0));
        
        for (bazar.Cliente c : listaClienteV) {
            if (c.getCodigo() == codigo) {
               consumidor = c;
            }
        }
    }//GEN-LAST:event_gridClientesVMouseClicked

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        
    }//GEN-LAST:event_btnSelecionarActionPerformed
    
      private void atualizaGrid() {
        bazar.ClienteDAO daocliente = new ClienteDAO();
        listaClienteV = daocliente.selecionarTodos(true);

        DefaultTableModel modelo = (DefaultTableModel) gridClientesV.getModel();
        int rowCount = modelo.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }

        for (bazar.Cliente c : listaClienteV) {
            modelo.addRow(new Object[]{c.getCodigo(), c.getNome() + c.getSobrenome() , c.getTelefone(), c.getCelular(), c.getEmail(), c.getDescricao()});
        }
    }

    private void atualizaGrid(List<bazar.Cliente> listan) {

        DefaultTableModel modelo = (DefaultTableModel) gridClientesV.getModel();
        int rowCount = modelo.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }

         for (bazar.Cliente c : listan) {
            modelo.addRow(new Object[]{c.getCodigo(), c.getNome() + c.getSobrenome() , c.getTelefone(), c.getCelular(), c.getEmail(), c.getDescricao()});
        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FLclienteVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FLclienteVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FLclienteVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FLclienteVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FLclienteVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntCancelar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JTable gridClientesV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNomeC;
    // End of variables declaration//GEN-END:variables
}
