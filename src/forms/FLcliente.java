/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import bazar.Cliente;
import bazar.ClienteDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dan0001
 */
public class FLcliente extends javax.swing.JInternalFrame {

    List<bazar.Cliente> listaClientes = new ArrayList();
    private int codigo;

    /**
     * Creates new form Clientes
     */
    public FLcliente() {

        initComponents();
        atualizaGrid();

    }

    private void atualizaGrid() {
        bazar.ClienteDAO daocliente = new ClienteDAO();
        listaClientes = daocliente.selecionarTodos();

        DefaultTableModel modelo = (DefaultTableModel) gridClientes.getModel();

        int rowCount = modelo.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }

        for (bazar.Cliente c : listaClientes) {
            modelo.addRow(new Object[]{c.getCodigo(), c.getNome(), c.getSobrenome(), c.getTelefone()});
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jSeparator1 = new javax.swing.JSeparator();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        gridClientes = new javax.swing.JTable();

        setClosable(true);
        setMaximumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(null);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(0, 72, 1026, 10);

        btnNovo.setText("Cadastrar");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNovo);
        btnNovo.setBounds(10, 11, 160, 55);

        btnEditar.setText("Alterar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar);
        btnEditar.setBounds(176, 11, 160, 55);

        btnRemover.setText("Deletar");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });
        getContentPane().add(btnRemover);
        btnRemover.setBounds(342, 11, 160, 55);
        getContentPane().add(jSeparator2);
        jSeparator2.setBounds(0, 601, 1026, 20);

        gridClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nome", "Sobrenome", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gridClientes.setMaximumSize(new java.awt.Dimension(1024, 0));
        gridClientes.setMinimumSize(new java.awt.Dimension(1024, 0));
        gridClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gridClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(gridClientes);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 80, 600, 250);

        setBounds(0, 0, 632, 364);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        FCCliente objCadastro = new FCCliente();
        objCadastro.setVisible(true);
        this.atualizaGrid();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (codigo > 0) {

            FCCliente objEditar = new FCCliente(codigo);
            objEditar.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "Seleciona o Cliente na Tabela");
        }
        codigo = 0;
    }//GEN-LAST:event_btnEditarActionPerformed

    private void gridClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gridClientesMouseClicked
        int linhaSelecionada = gridClientes.getSelectedRow();
        DefaultTableModel modelo = (DefaultTableModel) gridClientes.getModel();
        codigo = ((Integer) modelo.getValueAt(linhaSelecionada, 0));
    }//GEN-LAST:event_gridClientesMouseClicked

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if (codigo > 0) {
            int respostaR = JOptionPane.showConfirmDialog(this, "Deseja Realmente Remover o Cliente ?");
            //0 - Sim | 1 - Não | 2 - Cancelar
            if (respostaR == 0) {
                try {
                    new ClienteDAO().deletar(new ClienteDAO().selecionarCliente(codigo));
                    JOptionPane.showMessageDialog(null, "Cliente Removido com Sucesso");
                } catch (SQLException ex) {
                    Logger.getLogger(FLcliente.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(null, "Não foi possivel remover o Cliente. Contate o Desenvolvedor!");
                }
                this.atualizaGrid();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Seleciona o Cliente na Tabela");
        }
        codigo = 0;
                                              


    }//GEN-LAST:event_btnRemoverActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JTable gridClientes;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

}
